* {
  padding: 0;
  margin: 0;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
  line-height: 1.15;
  font-family: "Courier New", Courier, monospace;
}

body {
  padding: 20px;
  background-color: #555;
  color: #aaa;
}

.mouse-effect-checkbox {
  width: 30px;
  height: 30px;
  display: inline-block;
  border: 2px solid #aaa;
  border-radius: 4px;
  background-color: #aaa;
  position: relative;
  cursor: pointer;
}
.mouse-effect-checkbox::after {
  content: "";
  width: 6px;
  height: 12px;
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  border-bottom: 4px solid #fff;
  border-right: 4px solid #fff;
  border-radius: 2px;
  opacity: 0;
}
.mouse-effect-checkbox.checked {
  background-color: #aaa;
}
.mouse-effect-checkbox.checked::after {
  opacity: 1;
}

input[type=number] {
  width: 70px;
  padding: 6px 10px;
  font-size: 14px;
  color: #333;
  font-weight: 600;
  border: 1px solid #aaa;
  outline: none;
  border-radius: 4px;
}

.game-mode > .mode, .paper > .paper__item, .start-with {
  width: 120px;
  height: 40px;
  color: #fff;
  border-radius: 4px;
  border: 1px solid #fff;
  background-color: #aaa;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.3s ease;
}
.game-mode > .mode:hover, .paper > .paper__item:hover, .start-with:hover, .game-mode > .active.mode, .paper > .active.paper__item, .active.start-with {
  color: #aaa;
  background-color: #fff;
}

.start-with {
  margin-top: 40px;
  cursor: pointer;
}

.current-level {
  width: 100%;
  font-size: 20px;
  font-weight: 600;
  color: #333;
  position: relative;
  display: block;
  margin-top: 20px;
}
.current-level::before {
  content: "current level: ";
  font-size: 14px;
  font-weight: 400;
}

.click-counter {
  width: 100%;
  font-size: 20px;
  font-weight: 600;
  color: #333;
  position: relative;
  display: block;
}
.click-counter::before {
  content: "click counter: ";
  font-size: 14px;
  font-weight: 400;
}

.paper {
  max-width: 100%;
  display: flex;
  flex-wrap: wrap;
  position: relative;
  margin-top: 20px;
}
.paper > .paper__item {
  width: 80px;
  height: 80px;
  background-color: #aaa;
  margin: 4px;
  font-size: 40px;
  cursor: pointer;
  position: relative;
}
.paper > .paper__item::after {
  content: attr(data-content);
  position: absolute;
  font-weight: 600;
}
.paper > .paper__item.active, .paper > .paper__item.is-open {
  cursor: not-allowed;
  color: #fff;
  background-color: #555;
}

.game-mode {
  display: flex;
  flex-wrap: wrap;
}
.game-mode > .mode {
  max-width: 32%;
  margin: 4px;
  cursor: pointer;
}
.game-mode > .mode::after {
  font-size: 14px;
  font-weight: 500;
}
.game-mode > .mode.easy::after {
  content: "easy";
}
.game-mode > .mode.medium::after {
  content: "medium";
}
.game-mode > .mode.hard::after {
  content: "hard";
}
.game-mode > .mode.super-hard::after {
  content: "super hard";
}
.game-mode > .mode.hell::after {
  content: "hell";
}

.mouse-effect {
  position: fixed;
  z-index: 999;
  top: 100px;
  left: 100px;
  width: 50px;
  height: 50px;
  transform: translate(-50%, -50%);
  user-select: none;
  pointer-events: none;
}
.mouse-effect::after, .mouse-effect::before {
  content: "";
  position: absolute;
  z-index: -1;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  border-radius: 999px;
  transform: translate(-50%, -50%);
  border: 2px solid #aaa;
}
.mouse-effect::after {
  animation: kf_mouse_effect 0.5s ease 0s 1 both;
}
.mouse-effect::before {
  animation: kf_mouse_effect 0.6s ease 0.2s 1 both;
}

@keyframes kf_mouse_effect {
  0% {
    transform: translate(-50%, -50%) scale(0, 0);
    opacity: 1;
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50%) scale(2.5, 2.5);
  }
}
.circle-hover,
.circle-hover-effect {
  width: 20px;
  height: 20px;
  background-color: #aaa;
  border-radius: 99px;
  position: fixed;
  z-index: 1000;
  display: block;
  top: 0;
  left: 0;
  transform: translate(-50%, -50%);
}

.circle-hover-effect {
  animation: kf_fall_down_effect duration timing-function delay iteration-count direction fill-mode;
}

@keyframes kf_fall_down_effect {
  to {
    transform: translateY(100px);
  }
}

/*# sourceMappingURL=styled.css.map */
